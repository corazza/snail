data List<A> as
    Nil,
    Concat(A, List<A>)
enddata

data Option<A> as
    None,
    Some(A)
enddata

def head<B>(xs: List<B>) -> Option<B> as
    match xs as
        Concat(x, tail) => return Some(x),
        Nil => return None
    endmatch
enddef

let lista: List<int> = Concat(1, Concat(2, Concat(3, Nil)));
print head(lista);
