def print(x: A) -> unit as
    __print x;
    return UNIT;
enddef

def println(x: A) -> unit as
    __print x;
    __print __newline;
    return UNIT;
enddef

def input() -> int as
    let x: int = 0;
    __input x;
    return x;
enddef

data Option<A> as
    None,
    Some(A)
enddata

data List<A> as
    Nil,
    Concat(A, List<A>)
enddata

def head(xs: List<A>) -> Option<A> as
    match xs as
        Concat(x, tail) => return Some(x),
        Nil => return None
    endmatch
enddef


println(Concat(1, Concat(2, Nil))); // OK
println(Concat(1, Concat("asdf", Nil))); // type error!
